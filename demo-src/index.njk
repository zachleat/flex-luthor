<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>The Flex Luthor Flexbox Layout System</title>
		<link rel="stylesheet" href="flex-luthor.css">
		<link rel="stylesheet" href="flex-luthor-separators.css">
		<link rel="stylesheet" href="flex-luthor-debug-fill.css">
		<link rel="stylesheet" href="prism-theme.css">
		<style>
		body {
			font-family: system-ui, sans-serif;
			max-width: 60em;
			margin: 0 auto;
		}
		p {
			max-width: 42em;
		}

		.source-details {
			border-radius: .25rem;
			margin-bottom: 3em;
		}
		.source-details summary {
			padding: .5rem 1rem;
			border: 1px solid #eee;
			color: #555;
			font-size: 0.8125em; /* 13px /16 */
			font-weight: 500;
			text-transform: uppercase;
			letter-spacing: .5px;
		}
		.source-details[open] summary {
			border-top-right-radius: .25rem;
			border-top-left-radius: .25rem;
			background-color: #444;
			color: #fff;
			border-color: transparent;
		}

		@supports(transform: rotate(90deg)) {
			.source-details summary {
				/* Note this blows away the arrow in Firefox so we need another method to show an arrow */
				display: inline-block;
			}
			.source-details summary::-webkit-details-marker {
				display: none;
			}
			.source-details summary:before {
				display: inline-block;
				content: "";
				margin-right: .75em;
				width: 0;
				height: 0;
				border-top: .4em solid transparent;
				border-bottom: .4em solid transparent;
				border-left: .4em solid;
			}
			.source-details[open] summary:before {
				transform: rotate(90deg);
				/*border-bottom: none;
				border-left: .4em solid transparent;
				border-right: .4em solid transparent;
				border-top: .4em solid;*/
			}
		}
		.source-details pre {
			margin: 0;
			padding: 1rem;
			border-top-right-radius: 0;
			border-top-left-radius: 0;
			border-width: 0;
		}

		/* Code */

		/* Flex Luthor demo styles */
		.fl > * {
			padding: 1em;
		}
		.demo-fl-debug-sep > * {
			background-color: #f4f4f4;
		}
		resize-asaurus {
			padding-bottom: 1.375em; /* 22px /16 */
			border-bottom: .125em solid;
			margin: 0 0 1em;
		}
		</style>

		<!-- resizer via 3rd party CDN, not recommended for production use -->
		<script type="module" src="https://esm.sh/@zachleat/resizeasaurus@4.0.1"></script>
	</head>
	<body>
		<h1>The Flex Luthor Flexbox Layout System</h1>
		<p>Alternatively known as <em>Oh no why did they make an abstraction for Flexbox</em>. View <a href="https://github.com/zachleat/flex-luthor/">on GitHub</a>.</p>

		<main>
			<h2>Simple Layouts</h2>
			<h3>Two Column</h3>
{% example "html" %}
<div class="fl fl-debug">
	<div>First cell</div>
	<div>Second cell</div>
</div>
{% endexample %}

			<h3>Five Column</h3>
			<p>Adding more cells divides the container evenly.</p>

{% example "html" %}
<div class="fl fl-debug">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h2>Gap Between Cells</h2>

			<p>Gaps are defaulted to <code>1em</code> horizontal and <code>.5em</code> vertical. They only show between cells. Horizontal gaps are not shown when cells are all stacked. Vertical gaps are not shown when cells are in a single row.</p>

			<h3>Horizontal (<code>--fl-gap-h: 2em</code>)</h3>
{% example "html" %}
<div class="fl fl-debug" style="--fl-gap-h: 2em">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h3>Vertical  (<code>--fl-gap-h: 1em</code>)</h3>
{% example "html" %}
<div class="fl fl-debug" style="--fl-gap-v: 1em">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h3>Both Vertical and Horizontal (<code>--fl-gap-h: 2em; --fl-gap-v: 1em</code>)</h3>
{% example "html" %}
<div class="fl fl-debug" style="--fl-gap-h: 2em; --fl-gap-v: 1em">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h2>Stackpoint</h2>

			<p><em>This is the <a href="https://heydonworks.com/article/the-flexbox-holy-albatross/">Flexbox Holy Abatross method</a> from Heydon Pickering</em>. This is a container width based breakpoint. Going below this width forces the layout to a single column.</p>

			<h3>Single Column below <code>27em</code> (<code>432px</code>) <em>Container</em> Width</h3>
{% example "html" %}
<div class="fl fl-debug" style="--fl-stackpoint: 27em;">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}


			<h2>Separators</h2>

			<p>Separators only show between cells between columns and rows. If all cells are stacked in a single column, no horizontal separators will be shown. Same for vertical separators and a single row of cells.</p>

			<h3>Horizontal</h3>
{% example "html" %}
<div class="fl demo-fl-debug-sep fl-separator-h" style="--fl-separator-color: #333">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h3>Vertical</h3>
{% example "html" %}
<div class="fl demo-fl-debug-sep fl-separator-v" style="--fl-gap-v: 1em; --fl-separator-color: #333">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h3>Both Horizontal and Vertical</h3>
{% example "html" %}
<div class="fl demo-fl-debug-sep fl-separator-h fl-separator-v" style="--fl-gap-v: 1em; --fl-separator-color: #333">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h3>Both Horizontal and Vertical (`rtl` direction)</h3>
{% example "html" %}
<div class="fl demo-fl-debug-sep fl-separator-h fl-separator-v" style="--fl-gap-v: 1em; --fl-separator-color: #333; direction: rtl">
	<div>First cell</div>
	<div>Second cell</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h2>Prefer to Wrap Cell Before Content</h2>

			<p>By default, the content inside of a cell will wrap before the cell will wrap to a new line. To swap this so that the cell will wrap <em>before</em> the content wraps, add the <code>flex-cell-wrap</code>.</p>

{% example "html" %}
<div class="fl fl-debug">
	<div>First cell</div>
	<div class="fl-cell-wrap">This cell will wrap to a new line before wrapping its content</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<p>You can apply this to all cells in the layout with <code>fl-nowrap</code> on the container.</p>

{% example "html" %}
<div class="fl fl-nowrap fl-debug">
	<div>First cell</div>
	<div class="fl-cell-wrap">This cell will wrap to a new line before wrapping its content</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}

			<h2>Inline Layout</h2>

			<p>Cells only take up their content width. This disables <code>flex-grow</code> on the cells. Works with <code>fl-cell-wrap</code> too.</p>

{% example "html" %}
<div class="fl fl-inline fl-debug">
	<div>First cell</div>
	<div class="fl-cell-wrap">This cell will wrap to a new line before wrapping its content</div>
	<div>Third cell</div>
	<div>Fourth cell</div>
	<div>Fifth cell</div>
</div>
{% endexample %}
		</main>
	</body>
</html>